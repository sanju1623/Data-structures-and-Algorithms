class Solution {
    public List<List<Integer>> subsets(int[] nums) {
	int s=(int) Math.pow(2,nums.length)-1;
        List first=new ArrayList();
	List<List<Integer>> out=new ArrayList<List<Integer>>();
        out.add(first);
      int m=nums.length;
      for(int i=1;i<=s;i++)
      {
        Integer n = new Integer(i);
        String binary = Integer.toBinaryString(n);
                   List k=new ArrayList();
          while(binary.length()!=nums.length)
              binary='0'+binary;
          StringBuilder input1 = new StringBuilder();
          input1.append(binary);
          input1= input1.reverse(); 
           for(int a=0;a<input1.length();a++)
           {
               if(input1.charAt(a)=='1')
               {
                   k.add(nums[a]);
               }
           }
          Collections.sort(k);
          out.add(k);
      }
        return out;
    }
}
