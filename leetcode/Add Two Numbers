/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        //for carries   
        List<Integer> l=new ArrayList();
        int p=0;
        int carry=0;
        while(l1!=null || l2!=null)    
        {
            ListNode temp=l1;
            if(l2!=null && l1!=null)
            {
                p=l1.val+l2.val;
                l1=l1.next;
                l2=l2.next;
            }
            else if(l2==null && l1!=null)
            {
                p=l1.val;
                l1=l1.next;
            }
            else
            {
               p=l2.val;
               l2=l2.next;
            }
            if(p>9)
            {
             l.add((p-10)+carry);
                carry=1;
            }
            else
            {
                if(p+carry>9)
                {
                    l.add(p+carry-10);
            carry=1;
                }
                else
                {    
                l.add(p+carry);
                carry=0;
                }
            }
        } 
        if(carry==1)
        l.add(1);
        ListNode k,temp,w;
            k=new ListNode(l.get(0));
        temp=k;
        for(int i=1;i<l.size();i++)
        {
           w= new ListNode(l.get(i));
             k.next=w;
            k=k.next;
        }
        return temp;
    }
}
