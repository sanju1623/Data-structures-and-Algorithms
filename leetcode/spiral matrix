// referred from programming creek (AFTER)


class Solution {
    public List<Integer> spiralOrder(int[][] nums) {
     
        List<Integer>output=new ArrayList<Integer>();
       if(nums.length==0 ||nums==null)
           return output;
        int m=nums.length;
        int n=nums[0].length;
        int x=0;
        int y=0;
        
        while(m>0 && n>0){
            
            if(m==1){
            for(int i=0;i<n;i++){
                output.add(nums[x][y++]);
             }
                return output;
            }else if(n==1){
                for(int i=0;i<m;i++){
                output.add(nums[x++][y]);
             }  
                
                return output;
            }
            
            
            //top right
            for(int i=0;i<n-1;i++){
                output.add(nums[x][y++]);
            }
            
            //bottom
            for(int i=0;i<m-1;i++){
                output.add(nums[x++][y]);     
            }
            
            //left
            for(int i=0;i<n-1;i++){
                output.add(nums[x][y--]);     
            }
            
            //top
             for(int i=0;i<m-1;i++){
                output.add(nums[x--][y]);     
            }
            // as two rows and two cols are done for one circle
            m=m-2;
            n=n-2;
            //go inner
            x++;
            y++;
        }
        
        return output;
    }
}
